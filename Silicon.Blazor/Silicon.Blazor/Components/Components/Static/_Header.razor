@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityRedirectManager RedirectManager
@inject UserService UserService

<header>
    <div class="container">
        @if(User != null)
        {
            <NavLink id="logo" href="/"><img src="/images/icons/@(User.IsDarkMode ? "silicon-logo-dark.svg" : "silicon-logo-light_theme.svg")" alt="Silicon-logo"></NavLink>
        }

        <div id="menu" class="hide">
            <nav>
                <NavLink href="/" class="menu-link asp-fragment">Overview</NavLink>
                <NavLink href="#features" class="menu-link asp-fragment">Features</NavLink>
                <NavLink href="/contact" class="menu-link">Contact</NavLink>

                <AuthorizeView>
                    <Authorized>
                        <NavLink href="/courses" class="menu-link">Courses</NavLink>
                    </Authorized>
                </AuthorizeView>

                <AuthorizeView Roles="SuperUser, Administrator, Author">
                    <Authorized>
                        <NavLink href="/backoffice" class="menu-link">Back Office</NavLink>
                    </Authorized>
                </AuthorizeView>

            </nav>
        </div>

        <div class="account-buttons hide" id="account-buttons">
            <AuthorizeView>
                <Authorized>
                    @if(User != null)
                    {
                        <NavLink href="/account/details" title="Profile"><img class="profile-image" src="/images/profiles/@User!.ProfileImageUrl" /></NavLink>
                    }
                    <NavLink href="/signout" class="sign-out" title="Sign Out"><i class="fa-regular fa-right-from-bracket "></i></NavLink>
                </Authorized>
                <NotAuthorized>
                    <NavLink href="/signin" class="btn-gray"><i class="fa-regular fa-right-to-bracket"></i><span>Sign In</span></NavLink>
                    <NavLink href="/signup" class="btn-theme"><i class="fa-regular fa-user"></i><span>Sign Up</span></NavLink>
                </NotAuthorized>
            </AuthorizeView>
        </div>

        <button onclick="toggleMenu()" class="btn-mobile">
            <i id="barsIcon" class="fa-regular fa-bars"></i>
            <i id="crossIcon" class="fa-sharp fa-solid fa-xmark hide"></i>
        </button>

    </div>
</header>

@code {
    [CascadingParameter]
    private ApplicationUser User { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        User = await UserService.GetUserAsync();
    }
}
